version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_SQUARE_APP_ID=${VITE_SQUARE_APP_ID}
      - VITE_SQUARE_LOCATION_ID=${VITE_SQUARE_LOCATION_ID}
      - VITE_SQUARE_ENVIRONMENT=${SQUARE_ENVIRONMENT:-sandbox}
      - VITE_SUPABASE_URL=${SUPABASE_URL}
      - VITE_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - mgl-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - SQUARE_ENVIRONMENT=${SQUARE_ENVIRONMENT:-sandbox}
      - SQUARE_ACCESS_TOKEN=${SQUARE_ACCESS_TOKEN}
      - SQUARE_LOCATION_ID=${SQUARE_LOCATION_ID}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/mgl}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db
    networks:
      - mgl-network
    
  ngrok:
    image: ngrok/ngrok:latest
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: "http backend:8000 --log=stdout"
    depends_on:
      - backend
    networks:
      - mgl-network

  db:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mgl
    ports:
      - "5432:5432"
    networks:
      - mgl-network

networks:
  mgl-network:
    driver: bridge

volumes:
  postgres_data: 